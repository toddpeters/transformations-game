{"ast":null,"code":"var _jsxFileName = \"/media/sj/Data/code/TransformationGame/the_cabin_tapes/src/components/Game/Canvas.js\";\nimport React, { Component } from \"react\";\nimport TriangleShape from \"./TriangleShape.js\";\nimport { Triangle } from \"./Triangle.js\";\nimport { evaluateMatch, evaluateBoundary } from \"./evaluate.js\";\nimport tangrams, { colorPalette, shuffle } from \"./tangrams.js\";\nimport drop from \"../Game/sounds/drop.mp3\";\nimport move3 from \"../Game/sounds/move3.mp3\";\nimport bounce2 from \"../Game/sounds/bounce2.mp3\";\nimport Animation from \"./Animation.js\";\nimport AnimateCompletion from \"./AnimateCompletion.js\";\nimport Help from \"./Help.js\";\nimport Tilt from \"react-tilt\";\n\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n\n    this.playAudio = sound => {\n      let audio = new Audio(sound);\n      audio.play();\n    };\n\n    this.initializeGoals = level => {\n      return tangrams[level].pieces.map(goal => {\n        return new Triangle(goal);\n      });\n    };\n\n    this.initializePlayers = level => {\n      return tangrams[level].pieces.map(player => {\n        return new Triangle(player.map(coordinates => -coordinates)); //Reverse coordinates\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.colors = shuffle(colorPalette);\n      this.setState({\n        color: this.colors.pop(),\n        start: true\n      });\n    };\n\n    this.reInitializePlayer = () => {\n      if (this.players.length) {\n        //Check if there are any player triangles left\n        const player = this.players.pop();\n        player.randomizeLocation();\n        this.setState({\n          color: this.colors.pop(),\n          moveCounter: 0\n        });\n        return player;\n      }\n    };\n\n    this.handleOnChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleTranslate = () => {\n      this.playAudio(move3);\n      this.setState({\n        animate: \"translate\"\n      }); //Wait until animation is finished, then perform actual transform on player Triangle\n\n      setTimeout(() => {\n        this.player.translate(Number(this.state.translateX), Number(this.state.translateY));\n        let bound = evaluateBoundary(this.player);\n        this.setState(state => ({\n          animate: null,\n          moveCounter: state.moveCounter + 1,\n          totalMoves: state.totalMoves + 1,\n          outside: bound\n        }));\n      }, 650); //If the translation moves the Triangle outside of the boundary, then reverse translation\n\n      setTimeout(() => {\n        if (this.state.outside) {\n          this.playAudio(bounce2);\n          this.setState(state => ({\n            animate: \"translate\"\n          }));\n          this.player.translate(Number(-this.state.translateX), Number(-this.state.translateY));\n          this.setState(state => ({\n            animate: null,\n            moveCounter: state.moveCounter + 1,\n            //extra move penalty\n            outside: false\n          }));\n        }\n      }, 650);\n      setTimeout(() => {\n        this.setState({\n          translateX: \"\",\n          translateY: \"\"\n        });\n      }, 650);\n    };\n\n    this.handleRotate = deg => {\n      this.playAudio(move3);\n      this.setState(state => ({\n        animate: \"rotate\",\n        rotateDeg: deg\n      })); //Wait until animation is finished, then perform actual transform on player Triangle\n\n      setTimeout(() => {\n        this.player.rotate(deg);\n        this.setState(state => ({\n          animate: null,\n          moveCounter: state.moveCounter + 1,\n          totalMoves: state.totalMoves + 1\n        }));\n      }, 650);\n    };\n\n    this.handleReflect = axis => {\n      this.playAudio(move3);\n      this.setState(state => ({\n        animate: \"reflect\",\n        reflectAxis: axis\n      })); //Wait until animation is finished, then perform actual transform on player Triangle\n\n      setTimeout(() => {\n        this.player.reflect(axis);\n        this.setState(state => ({\n          animate: null,\n          moveCounter: state.moveCounter + 1,\n          totalMoves: state.totalMoves + 1\n        }));\n      }, 650);\n    };\n\n    this.renderColumns = () => {\n      let columns = [];\n\n      for (let i = 0; i <= 1000; i = i + 50) {\n        columns.push( /*#__PURE__*/React.createElement(\"line\", {\n          key: i,\n          x1: i,\n          x2: i,\n          y1: \"0\",\n          y2: \"1000\",\n          stroke: \"gray\",\n          strokeWidth: \"1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 9\n          }\n        }));\n      }\n\n      return columns;\n    };\n\n    this.renderRows = () => {\n      let rows = [];\n\n      for (let i = 0; i <= 1000; i = i + 50) {\n        rows.push( /*#__PURE__*/React.createElement(\"line\", {\n          key: i,\n          x1: \"0\",\n          x2: \"1000\",\n          y1: i,\n          y2: i,\n          stroke: \"gray\",\n          strokeWidth: \"1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 9\n          }\n        }));\n      }\n\n      return rows;\n    };\n\n    this.renderXNumbers = () => {\n      let xNumbers = [];\n      let counter = -10;\n\n      for (let i = 2; i <= 1000; i = i + 50) {\n        xNumbers.push( /*#__PURE__*/React.createElement(\"text\", {\n          key: i,\n          x: i,\n          y: \"515\",\n          fontWeight: \"bold\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 9\n          }\n        }, counter));\n        counter = counter + 1;\n      }\n\n      return xNumbers;\n    };\n\n    this.renderYNumbers = () => {\n      let yNumbers = [];\n      let counter = 10;\n\n      for (let i = -2; i <= 1000; i = i + 50) {\n        if (counter !== 0) {\n          //Prevent double 0s\n          yNumbers.push( /*#__PURE__*/React.createElement(\"text\", {\n            key: i,\n            x: \"505\",\n            y: i,\n            fontWeight: \"bold\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 11\n            }\n          }, counter));\n        }\n\n        counter = counter - 1;\n      }\n\n      return yNumbers;\n    };\n\n    this.rendergoals = () => {\n      let counter = 0;\n      return this.goals.map(goal => {\n        counter = counter + 1;\n        return /*#__PURE__*/React.createElement(TriangleShape, {\n          key: counter,\n          triangleClassName: goal.completed ? \"completed\" : \"goal\",\n          color: this.state.color,\n          a: goal.a,\n          b: goal.b,\n          c: goal.c,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 9\n          }\n        });\n      });\n    };\n\n    this.addScore = () => {\n      this.setState(state => ({\n        score: state.score + (200 - 50 * (this.state.moveCounter - 1))\n      }));\n    };\n\n    this.state = {\n      translateX: \"\",\n      translateY: \"\",\n      rotateDeg: \"\",\n      reflectAxis: \"\",\n      animate: null,\n      moveCounter: 0,\n      totalMoves: 0,\n      score: 0,\n      outside: false,\n      color: \"\",\n      helpOpen: false\n    };\n    this.goals = this.initializeGoals(this.props.level);\n    this.players = this.initializePlayers(this.props.level);\n    this.player = this.players.pop();\n    this.colors = [];\n    this.helpToggle = this.helpToggle.bind(this);\n  }\n\n  helpToggle(e) {\n    this.setState({\n      helpOpen: !this.state.helpOpen\n    });\n  }\n\n  render() {\n    let win = true;\n    let rank = 0;\n\n    for (let goal of this.goals) {\n      if (!goal.completed) {\n        console.log(\"eval\");\n\n        if (evaluateMatch(this.player, goal)) {\n          goal.completed = true;\n          this.addScore();\n          this.playAudio(drop);\n          this.player = this.reInitializePlayer();\n          break;\n        }\n\n        win = false;\n      }\n    }\n\n    if (win) {\n      //Probably don't need to tally more score based on total moves\n      // this.setState(state => ({\n      //   score: state.score + (500 - 50 * (this.state.moveCounter))\n      // }));\n      let counter = 0;\n\n      for (let star of tangrams[this.props.level].stars) {\n        counter = counter + 1;\n\n        if (this.state.score >= star) {\n          rank = counter;\n        }\n      }\n\n      this.props.updateScore(this.state.score, rank);\n    }\n\n    let helpStatus = this.state.helpOpen ? \"isopen\" : \"\";\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"help\",\n      className: helpStatus,\n      onClick: this.helpToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }\n    }, \"Help\")), /*#__PURE__*/React.createElement(Help, {\n      helpStatus: helpStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"#EE2737FF\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 13\n      }\n    }, \"Current Score: \", this.state.score), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://udayton.edu/0/img/generic-profile.png\",\n      className: \"br-100 h3 w3 dib\",\n      title: \"Profile Photo\",\n      alt: \"Profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"f4 black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 15\n      }\n    }, this.props.username), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"mw3 bb bw1 b--black-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lh-copy measure center f5 black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 13\n      }\n    }, \"Level:\", \" \", this.props.level.charAt(0).toUpperCase() + this.props.level.slice(1)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lh-copy measure center f5 black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }\n    }, \"Best Score: \", this.props.bestScore), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lh-copy measure center f5 black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 13\n      }\n    }, \"Rank: \", this.props.levelRank)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"svg-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      width: \"1000\",\n      height: \"1000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 13\n      }\n    }, this.renderColumns(), this.renderRows(), /*#__PURE__*/React.createElement(\"line\", {\n      x1: \"500\",\n      x2: \"500\",\n      y1: \"0\",\n      y2: \"1000\",\n      stroke: \"black\",\n      strokeWidth: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"line\", {\n      x1: \"0\",\n      x2: \"1000\",\n      y1: \"500\",\n      y2: \"500\",\n      stroke: \"black\",\n      strokeWidth: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 15\n      }\n    }), this.renderXNumbers(), this.renderYNumbers(), /*#__PURE__*/React.createElement(\"text\", {\n      x: \"505\",\n      y: \"15\",\n      fontWeight: \"bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 15\n      }\n    }, \"10\"), /*#__PURE__*/React.createElement(\"text\", {\n      x: \"980\",\n      y: \"515\",\n      fontWeight: \"bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 15\n      }\n    }, \"10\"), this.rendergoals(), !this.state.animate && !win ? /*#__PURE__*/React.createElement(TriangleShape, {\n      triangleClassName: \"player\",\n      color: this.state.color,\n      a: this.player.a,\n      b: this.player.b,\n      c: this.player.c,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }\n    }) : null, this.state.animate ? /*#__PURE__*/React.createElement(Animation, {\n      triangleClassName: \"player\",\n      color: this.state.color,\n      a: this.player.a,\n      b: this.player.b,\n      c: this.player.c,\n      animate: this.state.animate,\n      rotateDeg: this.state.rotateDeg,\n      reflectAxis: this.state.reflectAxis,\n      translateX: Number(this.state.translateX),\n      translateY: Number(this.state.translateY),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }\n    }) : null, win ? /*#__PURE__*/React.createElement(AnimateCompletion, {\n      path: tangrams[this.props.level].path,\n      pathX: tangrams[this.props.level].pathX,\n      strokeDasharray: tangrams[this.props.level].strokeDasharray,\n      rank: rank,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 17\n      }\n    }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: \"2rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 15\n      }\n    }, \"Transformations:\"), /*#__PURE__*/React.createElement(\"button\", {\n      // className=\"f8 link dim ph3 pv2 mb2 dib black translate\"\n      className: \"f8 link ph3 pv2 mb2 dib black translate\",\n      href: \"#0\",\n      onClick: () => this.handleTranslate(),\n      disabled: this.state.animate || win ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 15\n      }\n    }, \"Translate\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-txt-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-txt pr2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 19\n      }\n    }, \"x-move:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"number\",\n      onChange: this.handleOnChange,\n      name: \"translateX\",\n      value: this.state.translateX,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-txt pr2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 19\n      }\n    }, \"y-move:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"number\",\n      onChange: this.handleOnChange,\n      name: \"translateY\",\n      value: this.state.translateY,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"f8 link ph3 pv2 mb2 dib black rotate-c\",\n      href: \"#0\",\n      id: \"idRotPlus\",\n      onClick: () => this.handleRotate(90),\n      disabled: this.state.animate || win ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 15\n      }\n    }, \"Rotate +90\\xB0 \\u21BB\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"f8 link ph3 pv2 mb2 dib black rotate-cc\",\n      href: \"#0\",\n      id: \"idRotMin\",\n      onClick: () => this.handleRotate(-90),\n      disabled: this.state.animate || win ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 15\n      }\n    }, \"Rotate -90\\xB0 \\u21BA\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"f8 link ph3 pv2 mb2 dib black reflect-x\",\n      href: \"#0\",\n      id: \"idRefX\",\n      onClick: () => this.handleReflect(\"x\"),\n      disabled: this.state.animate || win ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 15\n      }\n    }, \"Reflect on x-axis\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"f8 link ph3 pv2 mb2 dib black reflect-y\",\n      href: \"#0\",\n      id: \"idRefY\",\n      onClick: () => this.handleReflect(\"y\"),\n      disabled: this.state.animate || win ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 15\n      }\n    }, \"Reflect on y-axis\"), /*#__PURE__*/React.createElement(\"article\", {\n      className: \"mw5 mw6-ns hidden mv4 moves\",\n      style: {\n        textAlign: \"left\",\n        color: \"#EE2737FF\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"f5 mv0 pv2 ph3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 17\n      }\n    }, \"Number of Moves: \", this.state.totalMoves))))));\n  }\n\n}\n\nexport default Canvas;","map":{"version":3,"sources":["/media/sj/Data/code/TransformationGame/the_cabin_tapes/src/components/Game/Canvas.js"],"names":["React","Component","TriangleShape","Triangle","evaluateMatch","evaluateBoundary","tangrams","colorPalette","shuffle","drop","move3","bounce2","Animation","AnimateCompletion","Help","Tilt","Canvas","constructor","props","playAudio","sound","audio","Audio","play","initializeGoals","level","pieces","map","goal","initializePlayers","player","coordinates","componentDidMount","colors","setState","color","pop","start","reInitializePlayer","players","length","randomizeLocation","moveCounter","handleOnChange","event","target","name","value","handleTranslate","animate","setTimeout","translate","Number","state","translateX","translateY","bound","totalMoves","outside","handleRotate","deg","rotateDeg","rotate","handleReflect","axis","reflectAxis","reflect","renderColumns","columns","i","push","renderRows","rows","renderXNumbers","xNumbers","counter","renderYNumbers","yNumbers","rendergoals","goals","completed","a","b","c","addScore","score","helpOpen","helpToggle","bind","e","render","win","rank","console","log","star","stars","updateScore","helpStatus","username","charAt","toUpperCase","slice","bestScore","levelRank","path","pathX","strokeDasharray","fontSize","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport TriangleShape from \"./TriangleShape.js\";\nimport { Triangle } from \"./Triangle.js\";\nimport { evaluateMatch, evaluateBoundary } from \"./evaluate.js\";\nimport tangrams, { colorPalette, shuffle } from \"./tangrams.js\";\nimport drop from \"../Game/sounds/drop.mp3\";\nimport move3 from \"../Game/sounds/move3.mp3\";\nimport bounce2 from \"../Game/sounds/bounce2.mp3\";\nimport Animation from \"./Animation.js\";\nimport AnimateCompletion from \"./AnimateCompletion.js\";\nimport Help from \"./Help.js\";\nimport Tilt from \"react-tilt\";\n\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      translateX: \"\",\n      translateY: \"\",\n      rotateDeg: \"\",\n      reflectAxis: \"\",\n      animate: null,\n      moveCounter: 0,\n      totalMoves: 0,\n      score: 0,\n      outside: false,\n      color: \"\",\n      helpOpen: false\n    };\n    this.goals = this.initializeGoals(this.props.level);\n    this.players = this.initializePlayers(this.props.level);\n    this.player = this.players.pop();\n    this.colors = [];\n    this.helpToggle = this.helpToggle.bind(this);\n  }\n\n  playAudio = sound => {\n    let audio = new Audio(sound);\n    audio.play();\n  };\n\n  initializeGoals = level => {\n    return tangrams[level].pieces.map(goal => {\n      return new Triangle(goal);\n    });\n  };\n\n  initializePlayers = level => {\n    return tangrams[level].pieces.map(player => {\n      return new Triangle(player.map(coordinates => -coordinates)); //Reverse coordinates\n    });\n  };\n\n  componentDidMount = () => {\n    this.colors = shuffle(colorPalette);\n\n    this.setState({\n      color: this.colors.pop(),\n      start: true\n    });\n  };\n\n  reInitializePlayer = () => {\n    if (this.players.length) { //Check if there are any player triangles left\n      const player = this.players.pop();\n      player.randomizeLocation();\n\n      this.setState({\n        color: this.colors.pop(),\n        moveCounter: 0\n      });\n      return player;\n    }\n  };\n\n  handleOnChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleTranslate = () => {\n    this.playAudio(move3);\n    this.setState({\n      animate: \"translate\"\n    });\n\n    //Wait until animation is finished, then perform actual transform on player Triangle\n    setTimeout(() => {\n      this.player.translate(\n        Number(this.state.translateX),\n        Number(this.state.translateY)\n      );\n      let bound = evaluateBoundary(this.player);\n      this.setState(state => ({\n        animate: null,\n        moveCounter: state.moveCounter + 1,\n        totalMoves: state.totalMoves + 1,\n        outside: bound\n      }));\n    }, 650);\n\n    //If the translation moves the Triangle outside of the boundary, then reverse translation\n    setTimeout(() => {\n      if (this.state.outside) {\n        this.playAudio(bounce2);\n        this.setState(state => ({\n          animate: \"translate\"\n        }));\n        this.player.translate(\n          Number(-this.state.translateX),\n          Number(-this.state.translateY)\n        );\n        this.setState(state => ({\n          animate: null,\n          moveCounter: state.moveCounter + 1, //extra move penalty\n          outside: false\n        }));\n      }\n    }, 650);\n\n    setTimeout(() => {\n      this.setState({\n        translateX: \"\",\n        translateY: \"\"\n      });\n    }, 650);\n  };\n\n  handleRotate = deg => {\n    this.playAudio(move3);\n    this.setState(state => ({\n      animate: \"rotate\",\n      rotateDeg: deg\n    }));\n\n    //Wait until animation is finished, then perform actual transform on player Triangle\n    setTimeout(() => {\n      this.player.rotate(deg);\n      this.setState(state => ({\n        animate: null,\n        moveCounter: state.moveCounter + 1,\n        totalMoves: state.totalMoves + 1\n      }));\n    }, 650);\n  };\n\n  handleReflect = axis => {\n    this.playAudio(move3);\n    this.setState(state => ({\n      animate: \"reflect\",\n      reflectAxis: axis\n    }));\n\n    //Wait until animation is finished, then perform actual transform on player Triangle\n    setTimeout(() => {\n      this.player.reflect(axis);\n      this.setState(state => ({\n        animate: null,\n        moveCounter: state.moveCounter + 1,\n        totalMoves: state.totalMoves + 1\n      }));\n    }, 650);\n  };\n\n  renderColumns = () => {\n    let columns = [];\n    for (let i = 0; i <= 1000; i = i + 50) {\n      columns.push(\n        <line\n          key={i}\n          x1={i}\n          x2={i}\n          y1=\"0\"\n          y2=\"1000\"\n          stroke=\"gray\"\n          strokeWidth=\"1\"\n        />\n      );\n    }\n    return columns;\n  };\n\n  renderRows = () => {\n    let rows = [];\n    for (let i = 0; i <= 1000; i = i + 50) {\n      rows.push(\n        <line\n          key={i}\n          x1=\"0\"\n          x2=\"1000\"\n          y1={i}\n          y2={i}\n          stroke=\"gray\"\n          strokeWidth=\"1\"\n        />\n      );\n    }\n    return rows;\n  };\n\n  renderXNumbers = () => {\n    let xNumbers = [];\n    let counter = -10;\n    for (let i = 2; i <= 1000; i = i + 50) {\n      xNumbers.push(\n        <text key={i} x={i} y=\"515\" fontWeight=\"bold\">\n          {counter}\n        </text>\n      );\n      counter = counter + 1;\n    }\n    return xNumbers;\n  };\n\n  renderYNumbers = () => {\n    let yNumbers = [];\n    let counter = 10;\n    for (let i = -2; i <= 1000; i = i + 50) {\n      if (counter !== 0) { //Prevent double 0s\n        yNumbers.push(\n          <text key={i} x=\"505\" y={i} fontWeight=\"bold\">\n            {counter}\n          </text>\n        );\n      }\n      counter = counter - 1;\n    }\n    return yNumbers;\n  };\n\n  rendergoals = () => {\n    let counter = 0;\n    return this.goals.map(goal => {\n      counter = counter + 1;\n      return (\n        <TriangleShape\n          key={counter}\n          triangleClassName={goal.completed ? \"completed\" : \"goal\"}\n          color={this.state.color}\n          a={goal.a}\n          b={goal.b}\n          c={goal.c}\n        />\n      );\n    });\n  };\n\n  addScore = () => {\n    this.setState(state => ({\n      score: state.score + (200 - 50 * (this.state.moveCounter - 1))\n    }));\n  };\n\n  helpToggle(e) {\n    this.setState({\n      helpOpen: !this.state.helpOpen\n    });\n  }\n\n  render() {\n    let win = true;\n    let rank = 0;\n\n    for (let goal of this.goals) {\n      if (!goal.completed) {\n        console.log(\"eval\");\n        if (evaluateMatch(this.player, goal)) {\n          goal.completed = true;\n\n          this.addScore();\n          this.playAudio(drop);\n          this.player = this.reInitializePlayer();\n          break;\n        }\n        win = false;\n      }\n    }\n\n    if (win) {\n      //Probably don't need to tally more score based on total moves\n      // this.setState(state => ({\n      //   score: state.score + (500 - 50 * (this.state.moveCounter))\n      // }));\n\n      let counter = 0;\n      for (let star of tangrams[this.props.level].stars) {\n        counter = counter + 1;\n        if (this.state.score >= star) {\n          rank = counter;\n        }\n      }\n      this.props.updateScore(this.state.score, rank);\n    }\n\n    let helpStatus = this.state.helpOpen ? \"isopen\" : \"\";\n\n    return (\n      <>\n        <div className=\"container\">\n          <div className=\"help\">\n            <p id=\"help\" className={helpStatus} onClick={this.helpToggle}>\n              Help\n            </p>\n          </div>\n          <Help helpStatus={helpStatus} />\n          <div className=\"info-div\">\n            <p style={{ color: \"#EE2737FF\" }}>\n              Current Score: {this.state.score}\n            </p>\n            {/* <Tilt\n              className=\"new-tilt br3\"\n              options={{ max: 55 }}\n              style={{ height: 280, width: 250 }}\n            > */}\n            {/* <article\n                className=\"flex flex-column mw5 center bg-white br3 pa3 pa4-ns mv3 ba b--black-10\"\n                style={{ background: \"rgb(250, 250, 250)\", opacity: 0.9 }}\n              > */}\n            <div className=\"tc\">\n              <img\n                src=\"https://udayton.edu/0/img/generic-profile.png\"\n                className=\"br-100 h3 w3 dib\"\n                title=\"Profile Photo\"\n                alt=\"Profile\"\n              />\n              <h1 className=\"f4 black\">{this.props.username}</h1>\n              <hr className=\"mw3 bb bw1 b--black-10\" />\n            </div>\n            <p className=\"lh-copy measure center f5 black\">\n              Level:{\" \"}\n              {this.props.level.charAt(0).toUpperCase() +\n                this.props.level.slice(1)}\n            </p>\n            <p className=\"lh-copy measure center f5 black\">\n              Best Score: {this.props.bestScore}\n            </p>\n            <p className=\"lh-copy measure center f5 black\">\n              Rank: {this.props.levelRank}\n            </p>\n          </div>\n          <div className=\"svg-div\">\n            <svg width=\"1000\" height=\"1000\">\n              {this.renderColumns()}\n              {this.renderRows()}\n\n              {/*y-axis*/}\n              <line\n                x1=\"500\"\n                x2=\"500\"\n                y1=\"0\"\n                y2=\"1000\"\n                stroke=\"black\"\n                strokeWidth=\"3\"\n              />\n\n              {/*x-axis*/}\n              <line\n                x1=\"0\"\n                x2=\"1000\"\n                y1=\"500\"\n                y2=\"500\"\n                stroke=\"black\"\n                strokeWidth=\"3\"\n              />\n\n              {this.renderXNumbers()}\n              {this.renderYNumbers()}\n\n              {/*The 10s are offset so they don't get cutoff*/}\n              <text x=\"505\" y=\"15\" fontWeight=\"bold\">\n                10\n              </text>\n              <text x=\"980\" y=\"515\" fontWeight=\"bold\">\n                10\n              </text>\n              \n              {this.rendergoals()}\n              {!this.state.animate && !win ? (\n                <TriangleShape\n                  triangleClassName={\"player\"}\n                  color={this.state.color}\n                  a={this.player.a}\n                  b={this.player.b}\n                  c={this.player.c}\n                />\n              ) : null}\n              {this.state.animate ? (\n                <Animation\n                  triangleClassName={\"player\"}\n                  color={this.state.color}\n                  a={this.player.a}\n                  b={this.player.b}\n                  c={this.player.c}\n                  animate={this.state.animate}\n                  rotateDeg={this.state.rotateDeg}\n                  reflectAxis={this.state.reflectAxis}\n                  translateX={Number(this.state.translateX)}\n                  translateY={Number(this.state.translateY)}\n                />\n              ) : null}\n              {win ? (\n                <AnimateCompletion\n                  path={tangrams[this.props.level].path}\n                  pathX={tangrams[this.props.level].pathX}\n                  strokeDasharray={tangrams[this.props.level].strokeDasharray}\n                  rank={rank}\n                />\n              ) : null}\n            </svg>\n          </div>\n          <div className=\"buttons-div\">\n            <div className=\"buttons\">\n              <p style={{ fontSize: \"2rem\" }}>Transformations:</p>\n\n              <button\n                // className=\"f8 link dim ph3 pv2 mb2 dib black translate\"\n                className=\"f8 link ph3 pv2 mb2 dib black translate\"\n                href=\"#0\"\n                onClick={() => this.handleTranslate()}\n                disabled={this.state.animate || win ? true : false}\n              >\n                Translate\n              </button>\n              <div className=\"btn-txt-div\">\n                <div className=\"flex flex-row\">\n                  <div className=\"btn-txt pr2\">x-move:</div>\n                  <input\n                    className=\"input\"\n                    type=\"number\"\n                    onChange={this.handleOnChange}\n                    name={\"translateX\"}\n                    value={this.state.translateX}\n                  />\n                </div>\n                <br />\n                <div className=\"flex flex-row\">\n                  <div className=\"btn-txt pr2\">y-move:</div>\n                  <input\n                    className=\"input\"\n                    type=\"number\"\n                    onChange={this.handleOnChange}\n                    name={\"translateY\"}\n                    value={this.state.translateY}\n                  />\n                </div>\n              </div>\n\n              <button\n                className=\"f8 link ph3 pv2 mb2 dib black rotate-c\"\n                href=\"#0\"\n                id=\"idRotPlus\"\n                onClick={() => this.handleRotate(90)}\n                disabled={this.state.animate || win ? true : false}\n              >\n                Rotate +90° &#8635;\n              </button>\n              <button\n                className=\"f8 link ph3 pv2 mb2 dib black rotate-cc\"\n                href=\"#0\"\n                id=\"idRotMin\"\n                onClick={() => this.handleRotate(-90)}\n                disabled={this.state.animate || win ? true : false}\n              >\n                Rotate -90° &#8634;\n              </button>\n              <button\n                className=\"f8 link ph3 pv2 mb2 dib black reflect-x\"\n                href=\"#0\"\n                id=\"idRefX\"\n                onClick={() => this.handleReflect(\"x\")}\n                disabled={this.state.animate || win ? true : false}\n              >\n                Reflect on x-axis\n              </button>\n              <button\n                className=\"f8 link ph3 pv2 mb2 dib black reflect-y\"\n                href=\"#0\"\n                id=\"idRefY\"\n                onClick={() => this.handleReflect(\"y\")}\n                disabled={this.state.animate || win ? true : false}\n              >\n                Reflect on y-axis\n              </button>\n              <article\n                className=\"mw5 mw6-ns hidden mv4 moves\"\n                style={{ textAlign: \"left\", color: \"#EE2737FF\" }}\n              >\n                <h1 className=\"f5 mv0 pv2 ph3\">\n                  Number of Moves: {this.state.totalMoves}\n                </h1>\n                {/* <div className=\"pa3\">\n                  <p className=\"f6 f5-ns lh-copy measure mv0\">\n                    \n                  </p>\n                </div> */}\n              </article>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}