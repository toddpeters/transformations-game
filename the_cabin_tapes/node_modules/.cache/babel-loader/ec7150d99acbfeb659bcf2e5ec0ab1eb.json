{"ast":null,"code":"// global.fetch = require('node-fetch');\nconst url = 'http://127.0.0.1:5000/';\nconst fetchFunctions = {\n  async postData(url, data = {}) {\n    // Default options are marked with *\n    const response = await fetch(url, {\n      method: 'POST',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin',\n      // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      redirect: 'follow',\n      // manual, *follow, error\n      referrer: 'no-referrer',\n      // no-referrer, *client\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n    });\n    const json = await response.json(); // parses JSON response into native JavaScript objects\n\n    json.status = response.status;\n    json.statusText = response.statusText;\n    return json;\n  },\n\n  async getData(url) {\n    // Default options are marked with *\n    const response = await fetch(url); //     method: 'GET',     // *GET, POST, PUT, DELETE, etc.\n    //     mode: 'same-origin', // no-cors, *cors, same-origin\n    //     cache: 'no-cache',  // *default, no-cache, reload, force-cache, only-if-cached\n    //     credentials: 'same-origin', // include, *same-origin, omit\n    //     headers: {\n    //         'Content-Type': 'application/json'\n    //         // 'Content-Type': 'application/x-www-form-urlencoded',\n    //     },\n    //     redirect: 'follow',         // manual, *follow, error\n    //     referrer: 'no-referrer',    // no-referrer, *client\n    // });\n\n    const json = await response.json(); // parses JSON response into native JavaScript objects\n\n    json.status = response.status;\n    json.statusText = response.statusText;\n    return json;\n  },\n\n  async loadData(userName) {\n    return await this.getData(url + 'user/' + userName);\n  },\n\n  async registerUser(user) {\n    return await this.postData(url + 'user', user);\n  },\n\n  async loginUser(userName) {\n    return await this.postData(url + 'user/' + userName + '/login'); //this could be a get (we don't provide request data)\n  }\n\n};\nexport default fetchFunctions;","map":{"version":3,"sources":["/media/sj/Data/code/TransformationGame/the_cabin_tapes/src/api/javascript/fetchFunctions.js"],"names":["url","fetchFunctions","postData","data","response","fetch","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","json","status","statusText","getData","loadData","userName","registerUser","user","loginUser"],"mappings":"AAAA;AACA,MAAMA,GAAG,GAAG,wBAAZ;AAEA,MAAMC,cAAc,GAAG;AAEnB,QAAMC,QAAN,CAAeF,GAAf,EAAoBG,IAAI,GAAG,EAA3B,EAA+B;AACiB;AAC5C,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,EAAM;AAC9BM,MAAAA,MAAM,EAAE,MADsB;AACU;AACxCC,MAAAA,IAAI,EAAE,MAFwB;AAEU;AACxCC,MAAAA,KAAK,EAAE,UAHuB;AAGU;AACxCC,MAAAA,WAAW,EAAE,aAJiB;AAIU;AACxCC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX,CAE+B;;AAF/B,OALqB;AAS9BC,MAAAA,QAAQ,EAAE,QAToB;AASU;AACxCC,MAAAA,QAAQ,EAAE,aAVoB;AAUU;AACxCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAXwB,CAWU;;AAXV,KAAN,CAA5B;AAcA,UAAMa,IAAI,GAAG,MAAMZ,QAAQ,CAACY,IAAT,EAAnB,CAhB2B,CAgBiB;;AAC5CA,IAAAA,IAAI,CAACC,MAAL,GAAcb,QAAQ,CAACa,MAAvB;AACAD,IAAAA,IAAI,CAACE,UAAL,GAAkBd,QAAQ,CAACc,UAA3B;AACA,WAAOF,IAAP;AACH,GAtBkB;;AAwBnB,QAAMG,OAAN,CAAcnB,GAAd,EAAmB;AAC6B;AAC5C,UAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,CAA5B,CAFe,CAGf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAMgB,IAAI,GAAG,MAAMZ,QAAQ,CAACY,IAAT,EAAnB,CAfe,CAewB;;AACvCA,IAAAA,IAAI,CAACC,MAAL,GAAcb,QAAQ,CAACa,MAAvB;AACAD,IAAAA,IAAI,CAACE,UAAL,GAAkBd,QAAQ,CAACc,UAA3B;AACA,WAAOF,IAAP;AACH,GA3CkB;;AA6CnB,QAAMI,QAAN,CAAeC,QAAf,EAAyB;AACrB,WAAO,MAAM,KAAKF,OAAL,CAAanB,GAAG,GAAG,OAAN,GAAgBqB,QAA7B,CAAb;AACH,GA/CkB;;AAiDnB,QAAMC,YAAN,CAAmBC,IAAnB,EAAyB;AACrB,WAAO,MAAM,KAAKrB,QAAL,CAAcF,GAAG,GAAG,MAApB,EAA4BuB,IAA5B,CAAb;AACH,GAnDkB;;AAqDnB,QAAMC,SAAN,CAAgBH,QAAhB,EAA0B;AACtB,WAAO,MAAM,KAAKnB,QAAL,CAAcF,GAAG,GAAG,OAAN,GAAgBqB,QAAhB,GAA2B,QAAzC,CAAb,CADsB,CAC2C;AACpE;;AAvDkB,CAAvB;AA0DA,eAAepB,cAAf","sourcesContent":["// global.fetch = require('node-fetch');\nconst url = 'http://127.0.0.1:5000/';\n\nconst fetchFunctions = {\n\n    async postData(url, data = {}) {\n                                                    // Default options are marked with *\n        const response = await fetch(url, {\n            method: 'POST',                         // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors',                           // no-cors, *cors, same-origin\n            cache: 'no-cache',                      // *default, no-cache, reload, force-cache, only-if-cached\n            credentials: 'same-origin',             // include, *same-origin, omit\n            headers: {\n                'Content-Type': 'application/json'\n                                                    // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            redirect: 'follow',                     // manual, *follow, error\n            referrer: 'no-referrer',                // no-referrer, *client\n            body: JSON.stringify(data)              // body data type must match \"Content-Type\" header\n        });\n\n        const json = await response.json();         // parses JSON response into native JavaScript objects\n        json.status = response.status;\n        json.statusText = response.statusText;\n        return json;\n    },\n\n    async getData(url) {\n                                                    // Default options are marked with *\n        const response = await fetch(url)\n        //     method: 'GET',     // *GET, POST, PUT, DELETE, etc.\n        //     mode: 'same-origin', // no-cors, *cors, same-origin\n        //     cache: 'no-cache',  // *default, no-cache, reload, force-cache, only-if-cached\n        //     credentials: 'same-origin', // include, *same-origin, omit\n        //     headers: {\n        //         'Content-Type': 'application/json'\n        //         // 'Content-Type': 'application/x-www-form-urlencoded',\n        //     },\n        //     redirect: 'follow',         // manual, *follow, error\n        //     referrer: 'no-referrer',    // no-referrer, *client\n        // });\n\n        const json = await response.json();    // parses JSON response into native JavaScript objects\n        json.status = response.status;\n        json.statusText = response.statusText;\n        return json;\n    },\n\n    async loadData(userName) {\n        return await this.getData(url + 'user/' + userName);\n    },\n\n    async registerUser(user) {\n        return await this.postData(url + 'user', user);\n    },\n\n    async loginUser(userName) {\n        return await this.postData(url + 'user/' + userName + '/login'); //this could be a get (we don't provide request data)\n    },\n}\n\nexport default fetchFunctions;"]},"metadata":{},"sourceType":"module"}