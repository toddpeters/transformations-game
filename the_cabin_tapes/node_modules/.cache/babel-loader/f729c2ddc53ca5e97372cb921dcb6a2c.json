{"ast":null,"code":"export const evaluateMatch = (player, goal) => {\n  let points = [\"a\", \"b\", \"c\"];\n\n  for (let pPoint of points) {\n    for (let gPoint of points) {\n      if (player[pPoint].x === goal[gPoint].x && player[pPoint].y === goal[gPoint].y) {\n        console.log(pPoint, gPoint);\n        console.log(\"x: \", player[pPoint].x, goal[gPoint].x, \"y: \", player[pPoint].y, goal[gPoint].y);\n        break;\n      }\n\n      if (gPoint === \"c\") {\n        return false;\n      }\n    }\n  }\n\n  console.log(\"MATCH\");\n  return true;\n};\nexport const evaluateBoundary = player => {\n  let points = [\"a\", \"b\", \"c\"];\n\n  for (let pPoint of points) {\n    if (player[pPoint].x > 10 || player[pPoint].x < -10 || player[pPoint].y > 10 || player[pPoint].y < -10) {\n      return true;\n    }\n  }\n\n  return false;\n};","map":{"version":3,"sources":["/media/sj/Data/code/TransformationGame/the_cabin_tapes/src/components/Game/evaluate.js"],"names":["evaluateMatch","player","goal","points","pPoint","gPoint","x","y","console","log","evaluateBoundary"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,MAAD,EAASC,IAAT,KAAkB;AAC7C,MAAIC,MAAM,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAAb;;AACE,OAAK,IAAIC,MAAT,IAAmBD,MAAnB,EAA2B;AACvB,SAAK,IAAIE,MAAT,IAAmBF,MAAnB,EAA2B;AACvB,UAAIF,MAAM,CAACG,MAAD,CAAN,CAAeE,CAAf,KAAqBJ,IAAI,CAACG,MAAD,CAAJ,CAAaC,CAAlC,IAAuCL,MAAM,CAACG,MAAD,CAAN,CAAeG,CAAf,KAAqBL,IAAI,CAACG,MAAD,CAAJ,CAAaE,CAA7E,EAAgF;AAC5EC,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ,EAAoBC,MAApB;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBR,MAAM,CAACG,MAAD,CAAN,CAAeE,CAAjC,EAAoCJ,IAAI,CAACG,MAAD,CAAJ,CAAaC,CAAjD,EAAoD,KAApD,EAA2DL,MAAM,CAACG,MAAD,CAAN,CAAeG,CAA1E,EAA6EL,IAAI,CAACG,MAAD,CAAJ,CAAaE,CAA1F;AACA;AACH;;AACD,UAAIF,MAAM,KAAK,GAAf,EAAoB;AAChB,eAAO,KAAP;AACH;AACJ;AACJ;;AACDG,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,SAAO,IAAP;AACH,CAhBM;AAkBP,OAAO,MAAMC,gBAAgB,GAAGT,MAAM,IAAI;AACxC,MAAIE,MAAM,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAAb;;AACE,OAAK,IAAIC,MAAT,IAAmBD,MAAnB,EAA2B;AACzB,QACEF,MAAM,CAACG,MAAD,CAAN,CAAeE,CAAf,GAAmB,EAAnB,IACAL,MAAM,CAACG,MAAD,CAAN,CAAeE,CAAf,GAAmB,CAAC,EADpB,IAEAL,MAAM,CAACG,MAAD,CAAN,CAAeG,CAAf,GAAmB,EAFnB,IAGAN,MAAM,CAACG,MAAD,CAAN,CAAeG,CAAf,GAAmB,CAAC,EAJtB,EAKE;AACA,aAAO,IAAP;AACD;AACF;;AACD,SAAO,KAAP;AACD,CAbI","sourcesContent":["export const evaluateMatch = (player, goal) => {\n  let points = [\"a\",\"b\",\"c\"];\n    for (let pPoint of points) {\n        for (let gPoint of points) {\n            if (player[pPoint].x === goal[gPoint].x && player[pPoint].y === goal[gPoint].y) {\n                console.log(pPoint, gPoint);\n                console.log(\"x: \",player[pPoint].x, goal[gPoint].x, \"y: \", player[pPoint].y, goal[gPoint].y);\n                break;\n            }\n            if (gPoint === \"c\") {\n                return false;\n            }\n        }\n    }\n    console.log(\"MATCH\")\n    return true;\n}\n\nexport const evaluateBoundary = player => {\n  let points = [\"a\",\"b\",\"c\"];\n    for (let pPoint of points) {\n      if (\n        player[pPoint].x > 10 ||\n        player[pPoint].x < -10 ||\n        player[pPoint].y > 10 ||\n        player[pPoint].y < -10\n      ) {\n        return true;\n      }\n    }\n    return false;\n  };"]},"metadata":{},"sourceType":"module"}