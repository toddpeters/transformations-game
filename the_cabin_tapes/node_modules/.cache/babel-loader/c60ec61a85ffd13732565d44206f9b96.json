{"ast":null,"code":"const tangrams = {\n  house: {\n    pieces: [[9, -6, 5, -8, 9, -8], [5, -6, 5, -8, 9, -6], [7, -4, 5, -6, 9, -6]],\n    path: \"M850 700 L750 800 L 750 900 L 950 900 L 950 800 Z\",\n    pathX: 850,\n    strokeDasharray: 900,\n    stars: [0, 350, 450] //These are the ranges for the score cutoffss\n\n  },\n  tree: {\n    pieces: [[-5, -2, -6, -3, -4, -3], [-5, -3, -7, -5, -3, -5], [-5, -5, -8, -8, -2, -8], [-6, -8, -6, -10, -4, -10], [-6, -8, -4, -8, -4, -10]],\n    path: \"M250 600 L200 650 L250 650 L 150 750 L250 750 L 100 900 L 200 900 L 200 1000 L300 1000 L 300 900 L 400 900 L 250 750 L350 750 L 250 650 L 300 650 Z\",\n    pathX: 2100,\n    strokeDasharray: 2200,\n    stars: [0, 600, 800]\n  },\n  boat: {\n    pieces: [[1, 3, 4, 3, 4, 0], [4, 0, 6, 0, 4, 3], [4, 3, 6, 0, 9, 3], [6, 3, 10, 3, 8, 5], [6, 3, 8, 5, 6, 7], [0, 4, 3, 7, 6, 4], [3, 7, 6, 4, 6, 10]],\n    path: \"M800 0 L800 150 L 1000 350 L 950 350 L 800 500 L 700 500 L 550 350 L 800 350 L 800 300 L 500 300 Z\",\n    pathX: 2100,\n    strokeDasharray: 2200,\n    stars: [0, 850, 1150]\n  },\n  fish: {\n    pieces: [[1, 5, 5, 1, 5, 5], [5, 2, 7, 4, 5, 4], [7, 4, 9, 2, 9, 4], [7, 4, 9, 4, 9, 6], [7, 4, 7, 6, 9, 6], [7, 6, 9, 6, 9, 8], [7, 4, 5, 4, 7, 6], [5, 4, 5, 6, 7, 6], [5, 6, 5, 8, 7, 6], [1, 5, 5, 5, 5, 9]],\n    path: \"M750 50 L 750 100 L850 200 L 950 100 L 950 400 L 850 300 L 750 400 L 750 450 L 550 250 Z\",\n    pathX: 1500,\n    strokeDasharray: 1600,\n    stars: [0, 1250, 1650]\n  },\n  cat: {\n    pieces: [[2, -10, 6, -10, 6, -6], [6, -10, 8, -10, 8, -8], [8, -10, 10, -8, 8, -8], [3, -9, 6, -6, 3, -3], [3, -6, 1, -4, 3, -3], [3, -3, 1, -2, 3, -1], [3, -3, 5, -2, 3, -1], [1, -2, 1, 0, 3, -1], [3, -1, 5, -2, 5, 0]],\n    path: \"M550 500 L 650 550 L 750 500 L 750 600 L 650 650 L 800 800 L 800 1000 L 900 900 L 1000 900 L 900 1000 L 600 1000 L 650 950 L 650 800 L 550 700 L650 650 L 550 600 Z\",\n    pathX: 2300,\n    strokeDasharray: 2400,\n    stars: [0, 1050, 1450]\n  }\n};\nexport default tangrams;\nexport const colorPalette = [\"#FC766AFF\", \"#783937FF\", \"#F1AC88FF\", \"#F6EA7BFF\", \"#FFBA52FF\", \"#E683A9FF\", \"#F65058FF\", \"#FBDE44FF\", \"#28334AFF\", \"#95DBE5FF\", \"#078282FF\", \"#339E66FF\", \"#643E46FF\", \"#BA0020FF\" // \"#EE2737FF\" Reserved for highlight color\n];\nexport const shuffle = array => {\n  let array2 = array.slice();\n\n  for (let i = array2.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array2[i], array2[j]] = [array2[j], array2[i]];\n  }\n\n  return array2;\n};","map":{"version":3,"sources":["/media/sj/Data/code/TransformationGame/the_cabin_tapes/src/components/Game/tangrams.js"],"names":["tangrams","house","pieces","path","pathX","strokeDasharray","stars","tree","boat","fish","cat","colorPalette","shuffle","array","array2","slice","i","length","j","Math","floor","random"],"mappings":"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","sourcesContent":["const tangrams = {\n  house: {\n    pieces: [\n      [9, -6, 5, -8, 9, -8],\n      [5, -6, 5, -8, 9, -6],\n      [7, -4, 5, -6, 9, -6]\n    ],\n    path: \"M850 700 L750 800 L 750 900 L 950 900 L 950 800 Z\",\n    pathX: 850,\n    strokeDasharray: 900,\n    stars: [0, 350, 450]  //These are the ranges for the score cutoffss\n  },\n\n  tree: {\n    pieces: [\n      [-5, -2, -6, -3, -4, -3],\n      [-5, -3, -7, -5, -3, -5],\n      [-5, -5, -8, -8, -2, -8],\n      [-6, -8, -6, -10, -4, -10],\n      [-6, -8, -4, -8, -4, -10]\n    ],\n    path:\n      \"M250 600 L200 650 L250 650 L 150 750 L250 750 L 100 900 L 200 900 L 200 1000 L300 1000 L 300 900 L 400 900 L 250 750 L350 750 L 250 650 L 300 650 Z\",\n    pathX: 2100,\n    strokeDasharray: 2200,\n    stars: [0, 600, 800]\n  },\n\n  boat: {\n    pieces: [\n      [1, 3, 4, 3, 4, 0],\n      [4, 0, 6, 0, 4, 3],\n      [4, 3, 6, 0, 9, 3],\n      [6, 3, 10, 3, 8, 5],\n      [6, 3, 8, 5, 6, 7],\n      [0, 4, 3, 7, 6, 4],\n      [3, 7, 6, 4, 6, 10]\n    ],\n    path:\n      \"M800 0 L800 150 L 1000 350 L 950 350 L 800 500 L 700 500 L 550 350 L 800 350 L 800 300 L 500 300 Z\",\n    pathX: 2100,\n    strokeDasharray: 2200,\n    stars: [0, 850, 1150]\n  },\n\n  fish: {\n    pieces: [\n      [1, 5, 5, 1, 5, 5],\n      [5, 2, 7, 4, 5, 4],\n      [7, 4, 9, 2, 9, 4],\n      [7, 4, 9, 4, 9, 6],\n      [7, 4, 7, 6, 9, 6],\n      [7, 6, 9, 6, 9, 8],\n      [7, 4, 5, 4, 7, 6],\n      [5, 4, 5, 6, 7, 6],\n      [5, 6, 5, 8, 7, 6],\n      [1, 5, 5, 5, 5, 9]\n    ],\n    path:\n      \"M750 50 L 750 100 L850 200 L 950 100 L 950 400 L 850 300 L 750 400 L 750 450 L 550 250 Z\",\n    pathX: 1500,\n    strokeDasharray: 1600,\n    stars: [0, 1250, 1650]\n  },\n\n  cat: {\n    pieces: [\n      [2, -10, 6, -10, 6, -6],\n      [6, -10, 8, -10, 8, -8],\n      [8, -10, 10, -8, 8, -8],\n      [3, -9, 6, -6, 3, -3],\n      [3, -6, 1, -4, 3, -3],\n      [3, -3, 1, -2, 3, -1],\n      [3, -3, 5, -2, 3, -1],\n      [1, -2, 1, 0, 3, -1],\n      [3, -1, 5, -2, 5, 0]\n    ],\n    path:\n      \"M550 500 L 650 550 L 750 500 L 750 600 L 650 650 L 800 800 L 800 1000 L 900 900 L 1000 900 L 900 1000 L 600 1000 L 650 950 L 650 800 L 550 700 L650 650 L 550 600 Z\",\n    pathX: 2300,\n    strokeDasharray: 2400,\n    stars: [0, 1050, 1450]\n  }\n};\n\nexport default tangrams;\n\nexport const colorPalette = [\n  \"#FC766AFF\",\n  \"#783937FF\",\n  \"#F1AC88FF\",\n  \"#F6EA7BFF\",\n  \"#FFBA52FF\",\n  \"#E683A9FF\",\n  \"#F65058FF\",\n  \"#FBDE44FF\",\n  \"#28334AFF\",\n  \"#95DBE5FF\",\n  \"#078282FF\",\n  \"#339E66FF\",\n  \"#643E46FF\",\n  \"#BA0020FF\",\n  // \"#EE2737FF\" Reserved for highlight color\n];\n\nexport const shuffle = array => {\n  let array2 = array.slice();\n  for (let i = array2.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array2[i], array2[j]] = [array2[j], array2[i]];\n  }\n  return array2;\n};\n"]},"metadata":{},"sourceType":"module"}