{
  "{\"sourceRoot\":\"/media/sj/Data/code/transformations-game/Server/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/media/sj/Data/code/transformations-game/Server\",\"filename\":\"/media/sj/Data/code/transformations-game/Server/nodeserver.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/sj/Data/code/transformations-game/Server\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/sj/Data/code/transformations-game/Server/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/media/sj/Data/code/transformations-game/Server",
      "filename": "/media/sj/Data/code/transformations-game/Server/nodeserver.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/sj/Data/code/transformations-game/Server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/sj/Data/code/transformations-game/Server/nodeserver.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/sj/Data/code/transformations-game/Server/nodeserver.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/sj/Data/code/transformations-game/Server/",
        "sourceFileName": "nodeserver.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Express = require('express');\n\nvar bodyparser = require('body-parser');\n\nvar CORS = require('cors'); // import crdb from  ('./createDB.js');\n\n\nvar dbfunc = require('./createdb.js');\n\nvar http = require('http');\n\nvar https = require('https');\n\nvar sqlite3 = require('sqlite3').verbose();\n\nvar dbname = 'game.db'; // var jsonparser = bodyparser.json()\n// var db = new sqlite3.Database('game.db')\n// check if DB exists, else create or use as read only conn\n// var dbro = new sqlite3.Database(game.db,sqlite3.OPEN_READWRITE, (err) => {\n\nvar dbRO = new sqlite3.Database(dbname, sqlite3.OPEN_READONLY, function (err) {\n  if (err) {\n    if (err.errno == 14) {\n      console.log('Creating Database....');\n      dbfunc.createDB(dbname);\n    } // Create new DB and DB tables\n\n\n    console.assert(err, \"Unable to connect to DataBase\");\n  } else {\n    console.log('Connected to  database: game.db');\n  }\n});\ndbRO.close();\nvar nodeServer = Express();\nvar hostname = '127.0.0.1';\nvar port = 5000; //  to avoid CORS errors\n\nnodeServer.use(CORS());\nnodeServer.use(bodyparser.json());\nnodeServer.get('/', function (req, res) {\n  console.log(req.route); //\n\n  var db = new sqlite3.Database(dbname, sqlite3.OPEN_READWRITE, function (err) {});\n  db.serialize(function () {\n    db.run(' CREATE TABLE IF NOT EXISTS lorem (info TEXT, date_time TEXT)');\n    var stmt = db.prepare('INSERT INTO lorem VALUES (?,datetime(\"now\"))');\n\n    for (var i = 0; i < 10; i++) {\n      stmt.run('Ipsum ' + i);\n    }\n\n    stmt.finalize(); // db.run('INSERT INTO lorem  VALUES (datetime(\"now\"),datetime(\"now\", \"localtime\"))')\n\n    db.each('SELECT rowid AS id, info FROM lorem', function (err, row) {\n      console.log(row.id + ': ' + row.info);\n    });\n  });\n  db.close(); // \n\n  res.sendfile(\"./bunnybut.gif\");\n}); // get'/'\n\nnodeServer.get('/score', function (req, res) {\n  // console.log(req.route)\n  var qresult = '';\n  var db = new sqlite3.Database(dbname, sqlite3.OPEN_READWRITE, function (err) {});\n  db.all('SELECT * FROM lorem', function (err, row) {\n    // console.log(row.id + ': ' + row.info, row.date_time)\n    console.log(\"row: \", row);\n    console.log('qresult: ', qresult);\n    qresult = row; // res.send(\"Select state.score from DB\")\n\n    res.send(qresult); // res.JSON.parse(qresult)\n  });\n  db.close();\n});\nnodeServer.post('/register', function (req, res) {\n  var udata = req.body;\n  console.log(\"userdata :\", udata); //\n\n  var db = new sqlite3.Database(dbname, sqlite3.OPEN_READWRITE, function (err) {\n    if (err) {\n      console.error(err, dbname + 'not reachabe for  ReadWrite');\n    }\n  });\n  db.serialize(function () {\n    var _this = this;\n\n    // retained to add susbequent queries needed\n    var sql = \"INSERT INTO users (userid, email, password, reg_at) VALUES ((?), (?), (?), datetime(\\\"now\\\"))\";\n    var params = [udata.UserName, udata.UserEmail, udata.UserPassword];\n    db.run(sql, params, function (err) {\n      if (err) {\n        return console.log(err.message);\n      } // get the last insert id\n\n\n      console.log(\"Insert Successful. Row ID: \".concat(_this.lastID, \", \").concat(udata.UserName));\n    });\n  });\n  db.close();\n  res.send({\n    status: 200\n  });\n}); // POST '/register'\n\nnodeServer.listen(port, hostname, function () {\n  console.log('Node Server Listening on port :' + port);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "nodeserver.js"
      ],
      "names": [
        "Express",
        "require",
        "bodyparser",
        "CORS",
        "dbfunc",
        "http",
        "https",
        "sqlite3",
        "verbose",
        "dbname",
        "dbRO",
        "Database",
        "OPEN_READONLY",
        "err",
        "errno",
        "console",
        "log",
        "createDB",
        "assert",
        "close",
        "nodeServer",
        "hostname",
        "port",
        "use",
        "json",
        "get",
        "req",
        "res",
        "route",
        "db",
        "OPEN_READWRITE",
        "serialize",
        "run",
        "stmt",
        "prepare",
        "i",
        "finalize",
        "each",
        "row",
        "id",
        "info",
        "sendfile",
        "qresult",
        "all",
        "send",
        "post",
        "udata",
        "body",
        "error",
        "sql",
        "params",
        "UserName",
        "UserEmail",
        "UserPassword",
        "message",
        "lastID",
        "status",
        "listen"
      ],
      "mappings": ";;AACA,IAAOA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAxB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB,C,CAEA;;;AACA,IAAIG,MAAM,GAAEH,OAAO,CAAC,eAAD,CAAnB;;AACA,IAAII,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIK,KAAK,GAAGL,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIM,OAAO,GAAGN,OAAO,CAAC,SAAD,CAAP,CAAmBO,OAAnB,EAAd;;AAEA,IAAMC,MAAM,GAAG,SAAf,C,CAEA;AAGA;AACA;AACA;;AAEA,IAAIC,IAAI,GAAG,IAAIH,OAAO,CAACI,QAAZ,CAAqBF,MAArB,EAA6BF,OAAO,CAACK,aAArC,EAAoD,UAACC,GAAD,EAAS;AACtE,MAAIA,GAAJ,EAAS;AACP,QAAGA,GAAG,CAACC,KAAJ,IAAY,EAAf,EAAkB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAZ,MAAAA,MAAM,CAACa,QAAP,CAAgBR,MAAhB;AAED,KALM,CAMP;;;AACAM,IAAAA,OAAO,CAACG,MAAR,CAAeL,GAAf,EAAoB,+BAApB;AACD,GARD,MAQM;AAACE,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AAAgD;AAExD,CAXU,CAAX;AAYAN,IAAI,CAACS,KAAL;AAEA,IAAMC,UAAU,GAAGpB,OAAO,EAA1B;AACA,IAAMqB,QAAQ,GAAG,WAAjB;AACA,IAAMC,IAAI,GAAG,IAAb,C,CAEA;;AACAF,UAAU,CAACG,GAAX,CAAepB,IAAI,EAAnB;AACAiB,UAAU,CAACG,GAAX,CAAerB,UAAU,CAACsB,IAAX,EAAf;AAEAJ,UAAU,CAACK,GAAX,CAAe,GAAf,EAAoB,UAACC,GAAD,EAAKC,GAAL,EAAW;AAC3BZ,EAAAA,OAAO,CAACC,GAAR,CAAYU,GAAG,CAACE,KAAhB,EAD2B,CAE3B;;AACA,MAAIC,EAAE,GAAG,IAAItB,OAAO,CAACI,QAAZ,CAAqBF,MAArB,EAA6BF,OAAO,CAACuB,cAArC,EAAqD,UAACjB,GAAD,EAAS,CAAE,CAAhE,CAAT;AACAgB,EAAAA,EAAE,CAACE,SAAH,CAAa,YAAY;AAErBF,IAAAA,EAAE,CAACG,GAAH,CAAO,+DAAP;AACA,QAAIC,IAAI,GAAGJ,EAAE,CAACK,OAAH,CAAW,8CAAX,CAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BF,MAAAA,IAAI,CAACD,GAAL,CAAU,WAAWG,CAArB;AACD;;AACDF,IAAAA,IAAI,CAACG,QAAL,GAPqB,CASrB;;AACAP,IAAAA,EAAE,CAACQ,IAAH,CAAQ,qCAAR,EAA+C,UAAUxB,GAAV,EAAeyB,GAAf,EAAoB;AACjEvB,MAAAA,OAAO,CAACC,GAAR,CAAYsB,GAAG,CAACC,EAAJ,GAAS,IAAT,GAAgBD,GAAG,CAACE,IAAhC;AACD,KAFD;AAGD,GAbH;AAcEX,EAAAA,EAAE,CAACV,KAAH,GAlByB,CAoB3B;;AACAQ,EAAAA,GAAG,CAACc,QAAJ,CAAa,gBAAb;AACH,CAtBD,E,CAsBG;;AAIHrB,UAAU,CAACK,GAAX,CAAe,QAAf,EAAyB,UAACC,GAAD,EAAKC,GAAL,EAAW;AAChC;AACA,MAAIe,OAAO,GAAG,EAAd;AACA,MAAIb,EAAE,GAAG,IAAItB,OAAO,CAACI,QAAZ,CAAqBF,MAArB,EAA6BF,OAAO,CAACuB,cAArC,EAAqD,UAACjB,GAAD,EAAS,CAAE,CAAhE,CAAT;AACAgB,EAAAA,EAAE,CAACc,GAAH,CAAO,qBAAP,EAA8B,UAAU9B,GAAV,EAAeyB,GAAf,EAAoB;AAChD;AACAvB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBsB,GAApB;AACAvB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwB0B,OAAxB;AACAA,IAAAA,OAAO,GAAGJ,GAAV,CAJgD,CAMhD;;AACAX,IAAAA,GAAG,CAACiB,IAAJ,CAASF,OAAT,EAPgD,CAQhD;AACD,GATD;AAUDb,EAAAA,EAAE,CAACV,KAAH;AAEA,CAhBH;AAkBEC,UAAU,CAACyB,IAAX,CAAgB,WAAhB,EAA6B,UAACnB,GAAD,EAAKC,GAAL,EAAW;AAEtC,MAAImB,KAAK,GAAGpB,GAAG,CAACqB,IAAhB;AACAhC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B8B,KAA1B,EAHsC,CAItC;;AACA,MAAIjB,EAAE,GAAG,IAAItB,OAAO,CAACI,QAAZ,CAAqBF,MAArB,EAA6BF,OAAO,CAACuB,cAArC,EAAqD,UAACjB,GAAD,EAAS;AACrE,QAAGA,GAAH,EAAO;AACLE,MAAAA,OAAO,CAACiC,KAAR,CAAcnC,GAAd,EAAoBJ,MAAM,GAAE,6BAA5B;AACD;AACF,GAJQ,CAAT;AAKAoB,EAAAA,EAAE,CAACE,SAAH,CAAa,YAAY;AAAA;;AAAE;AACzB,QAAIkB,GAAG,kGAAP;AACA,QAAIC,MAAM,GAAG,CAACJ,KAAK,CAACK,QAAP,EAAiBL,KAAK,CAACM,SAAvB,EAAkCN,KAAK,CAACO,YAAxC,CAAb;AACCxB,IAAAA,EAAE,CAACG,GAAH,CAAOiB,GAAP,EAAYC,MAAZ,EAAmB,UAACrC,GAAD,EAAO;AACzB,UAAGA,GAAH,EAAO;AACL,eAAOE,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACyC,OAAhB,CAAP;AACD,OAHwB,CAIzB;;;AACAvC,MAAAA,OAAO,CAACC,GAAR,sCAA0C,KAAI,CAACuC,MAA/C,eAA0DT,KAAK,CAACK,QAAhE;AACD,KANA;AAOF,GAVD;AAWAtB,EAAAA,EAAE,CAACV,KAAH;AACAQ,EAAAA,GAAG,CAACiB,IAAJ,CAAS;AAACY,IAAAA,MAAM,EAAC;AAAR,GAAT;AAGH,CAzBC,E,CAyBC;;AAIHpC,UAAU,CAACqC,MAAX,CAAkBnC,IAAlB,EAAuBD,QAAvB,EACI,YAAI;AAACN,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAkCM,IAA9C;AAAoD,CAD7D",
      "sourceRoot": "/media/sj/Data/code/transformations-game/Server/",
      "sourcesContent": [
        "\nconst  Express = require('express');\nvar bodyparser = require('body-parser')\nconst CORS = require('cors');\n\n// import crdb from  ('./createDB.js');\nvar dbfunc =require('./createdb.js');\nvar http = require('http');\nvar https = require('https');\nvar sqlite3 = require('sqlite3').verbose()\n\nconst dbname = 'game.db'\n\n// var jsonparser = bodyparser.json()\n\n\n// var db = new sqlite3.Database('game.db')\n// check if DB exists, else create or use as read only conn\n// var dbro = new sqlite3.Database(game.db,sqlite3.OPEN_READWRITE, (err) => {\n\nlet dbRO = new sqlite3.Database(dbname, sqlite3.OPEN_READONLY, (err) => {\n  if (err) {\n    if(err.errno ==14){\n      console.log('Creating Database....')\n      dbfunc.createDB(dbname)\n      \n    }\n    // Create new DB and DB tables\n    console.assert(err, \"Unable to connect to DataBase\");\n  }else {console.log('Connected to  database: game.db');}\n  \n});\ndbRO.close()\n\nconst nodeServer = Express();\nconst hostname = '127.0.0.1';\nconst port = 5000;\n\n//  to avoid CORS errors\nnodeServer.use(CORS())\nnodeServer.use(bodyparser.json()) \n\nnodeServer.get('/', (req,res)=>{\n    console.log(req.route)\n    //\n    let db = new sqlite3.Database(dbname, sqlite3.OPEN_READWRITE, (err) => {});\n    db.serialize(function () {\n      \n        db.run(' CREATE TABLE IF NOT EXISTS lorem (info TEXT, date_time TEXT)')\n        var stmt = db.prepare('INSERT INTO lorem VALUES (?,datetime(\"now\"))')\n        for (var i = 0; i < 10; i++) {\n          stmt.run(('Ipsum ' + i))\n        }\n        stmt.finalize() \n         \n        // db.run('INSERT INTO lorem  VALUES (datetime(\"now\"),datetime(\"now\", \"localtime\"))')\n        db.each('SELECT rowid AS id, info FROM lorem', function (err, row) {\n          console.log(row.id + ': ' + row.info)\n        })\n      })\n      db.close()\n    \n    // \n    res.sendfile(\"./bunnybut.gif\")\n}) // get'/'\n\n      \n      \nnodeServer.get('/score', (req,res)=>{\n    // console.log(req.route)\n    let qresult = '';\n    let db = new sqlite3.Database(dbname, sqlite3.OPEN_READWRITE, (err) => {});\n    db.all('SELECT * FROM lorem', function (err, row) {\n      // console.log(row.id + ': ' + row.info, row.date_time)\n      console.log(\"row: \",row)\n      console.log('qresult: ',qresult)\n      qresult= (row) \n    \n      // res.send(\"Select state.score from DB\")\n      res.send(qresult)\n      // res.JSON.parse(qresult)\n    })\n   db.close() \n    \n  })\n     \n  nodeServer.post('/register', (req,res)=>{\n    \n    let udata = req.body\n    console.log(\"userdata :\", udata)\n    //\n    let db = new sqlite3.Database(dbname, sqlite3.OPEN_READWRITE, (err) => {\n      if(err){\n        console.error(err,  dbname +'not reachabe for  ReadWrite')\n      }\n    });\n    db.serialize(function () { // retained to add susbequent queries needed\n      let sql = `INSERT INTO users (userid, email, password, reg_at) VALUES ((?), (?), (?), datetime(\"now\"))`\n      let params = [udata.UserName, udata.UserEmail, udata.UserPassword]\n       db.run(sql, params,(err)=>{\n        if(err){\n          return console.log(err.message);\n        }\n        // get the last insert id\n        console.log(`Insert Successful. Row ID: ${this.lastID}, ${udata.UserName}`);\n      });\n    })\n    db.close()\n    res.send({status:200})\n        \n\n}) // POST '/register'\n  \n\n    \nnodeServer.listen(port,hostname, \n    ()=>{console.log('Node Server Listening on port :'+port)}) \n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588750599088
  },
  "{\"sourceRoot\":\"/media/sj/Data/code/transformations-game/Server/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/media/sj/Data/code/transformations-game/Server\",\"filename\":\"/media/sj/Data/code/transformations-game/Server/createdb.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/sj/Data/code/transformations-game/Server\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/sj/Data/code/transformations-game/Server/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/media/sj/Data/code/transformations-game/Server",
      "filename": "/media/sj/Data/code/transformations-game/Server/createdb.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/sj/Data/code/transformations-game/Server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/sj/Data/code/transformations-game/Server/createdb.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/sj/Data/code/transformations-game/Server/createdb.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/sj/Data/code/transformations-game/Server/",
        "sourceFileName": "createdb.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar Express = require('express');\n\nvar sqlite3 = require('sqlite3').verbose();\n\nvar dbfunc = {\n  createDB: function createDB(dbase, err) {\n    var dbCr = new sqlite3.Database(\"./\" + dbase, (err, function () {\n      if (err) {\n        console.error((err.errno + ' : ', err.code, 'encountered. Could not create Database ' + dbase));\n      }\n\n      console.log(\"Database game.db created\");\n    }));\n    dbCr.close(); // check if DB is accessible and then create tables inside the serialize()\n\n    var db = new sqlite3.Database(\"./\" + dbase, (err, function () {\n      // db.serialize(function () {})\n      db.serialize(function () {\n        db.run(' CREATE TABLE IF NOT EXISTS users (userid TEXT, password TEXT ,email TEXT , reg_at TEXT)');\n      });\n      db.close();\n    }));\n  } // function test() {\n  //     console.log(\"recognized as Function\")\n  // }\n\n};\nmodule.exports = dbfunc;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZWRiLmpzIl0sIm5hbWVzIjpbIkV4cHJlc3MiLCJyZXF1aXJlIiwic3FsaXRlMyIsInZlcmJvc2UiLCJkYmZ1bmMiLCJjcmVhdGVEQiIsImRiYXNlIiwiZXJyIiwiZGJDciIsIkRhdGFiYXNlIiwiY29uc29sZSIsImVycm9yIiwiZXJybm8iLCJjb2RlIiwibG9nIiwiY2xvc2UiLCJkYiIsInNlcmlhbGl6ZSIsInJ1biIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBT0EsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF4Qjs7QUFDQSxJQUFJQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxTQUFELENBQVAsQ0FBbUJFLE9BQW5CLEVBQWQ7O0FBRUEsSUFBTUMsTUFBTSxHQUFHO0FBQ1hDLEVBQUFBLFFBQVEsRUFBRSxrQkFBQ0MsS0FBRCxFQUFPQyxHQUFQLEVBQWM7QUFDcEIsUUFBSUMsSUFBSSxHQUFHLElBQUlOLE9BQU8sQ0FBQ08sUUFBWixDQUFxQixPQUFLSCxLQUExQixHQUFpQ0MsR0FBRyxFQUFDLFlBQUk7QUFDaEQsVUFBR0EsR0FBSCxFQUFPO0FBQ0hHLFFBQUFBLE9BQU8sQ0FBQ0MsS0FBUixFQUFlSixHQUFHLENBQUNLLEtBQUosR0FBVyxLQUFYLEVBQWtCTCxHQUFHLENBQUNNLElBQXRCLEVBQTZCLDRDQUEwQ1AsS0FBdEY7QUFDSDs7QUFDREksTUFBQUEsT0FBTyxDQUFDSSxHQUFSLENBQVksMEJBQVo7QUFDSCxLQUxVLEVBQVg7QUFNQU4sSUFBQUEsSUFBSSxDQUFDTyxLQUFMLEdBUG9CLENBVXhCOztBQUNBLFFBQUlDLEVBQUUsR0FBRyxJQUFJZCxPQUFPLENBQUNPLFFBQVosQ0FBcUIsT0FBS0gsS0FBMUIsR0FBaUNDLEdBQUcsRUFBQyxZQUFJO0FBQzdDO0FBQ0FTLE1BQUFBLEVBQUUsQ0FBQ0MsU0FBSCxDQUFhLFlBQUk7QUFDZEQsUUFBQUEsRUFBRSxDQUFDRSxHQUFILENBQU8sMEZBQVA7QUFJRixPQUxEO0FBTUFGLE1BQUFBLEVBQUUsQ0FBQ0QsS0FBSDtBQUNKLEtBVFEsRUFBVDtBQWNILEdBMUJjLENBNEJmO0FBQ0E7QUFDQTs7QUE5QmUsQ0FBZjtBQWtDQUksTUFBTSxDQUFDQyxPQUFQLEdBQWlCaEIsTUFBakIiLCJzb3VyY2VSb290IjoiL21lZGlhL3NqL0RhdGEvY29kZS90cmFuc2Zvcm1hdGlvbnMtZ2FtZS9TZXJ2ZXIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgIEV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG52YXIgc3FsaXRlMyA9IHJlcXVpcmUoJ3NxbGl0ZTMnKS52ZXJib3NlKClcblxuY29uc3QgZGJmdW5jID0ge1xuICAgIGNyZWF0ZURCIDooZGJhc2UsZXJyKT0+IHtcbiAgICAgICAgbGV0IGRiQ3IgPSBuZXcgc3FsaXRlMy5EYXRhYmFzZShcIi4vXCIrZGJhc2UsKGVyciwoKT0+e1xuICAgICAgICAgICAgaWYoZXJyKXtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKChlcnIuZXJybm8gKycgOiAnLCBlcnIuY29kZSAsICdlbmNvdW50ZXJlZC4gQ291bGQgbm90IGNyZWF0ZSBEYXRhYmFzZSAnK2RiYXNlKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkRhdGFiYXNlIGdhbWUuZGIgY3JlYXRlZFwiKVxuICAgICAgICB9KSlcbiAgICAgICAgZGJDci5jbG9zZSgpXG4gICAgXG5cbiAgICAvLyBjaGVjayBpZiBEQiBpcyBhY2Nlc3NpYmxlIGFuZCB0aGVuIGNyZWF0ZSB0YWJsZXMgaW5zaWRlIHRoZSBzZXJpYWxpemUoKVxuICAgIGxldCBkYiA9IG5ldyBzcWxpdGUzLkRhdGFiYXNlKFwiLi9cIitkYmFzZSwoZXJyLCgpPT57XG4gICAgICAgICAvLyBkYi5zZXJpYWxpemUoZnVuY3Rpb24gKCkge30pXG4gICAgICAgICBkYi5zZXJpYWxpemUoKCk9PntcbiAgICAgICAgICAgIGRiLnJ1bignIENSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHVzZXJzICh1c2VyaWQgVEVYVCwgcGFzc3dvcmQgVEVYVCAsZW1haWwgVEVYVCAsIHJlZ19hdCBURVhUKScpXG5cbiAgICAgICAgICAgIFxuXG4gICAgICAgICB9KVxuICAgICAgICAgZGIuY2xvc2UoKVxuICAgIH0pXG4gICAgKVxuXG4gICBcblxufVxuXG4vLyBmdW5jdGlvbiB0ZXN0KCkge1xuLy8gICAgIGNvbnNvbGUubG9nKFwicmVjb2duaXplZCBhcyBGdW5jdGlvblwiKVxuLy8gfVxufVxuXG5cbm1vZHVsZS5leHBvcnRzID0gZGJmdW5jIl19",
    "map": {
      "version": 3,
      "sources": [
        "createdb.js"
      ],
      "names": [
        "Express",
        "require",
        "sqlite3",
        "verbose",
        "dbfunc",
        "createDB",
        "dbase",
        "err",
        "dbCr",
        "Database",
        "console",
        "error",
        "errno",
        "code",
        "log",
        "close",
        "db",
        "serialize",
        "run",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAOA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAxB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAP,CAAmBE,OAAnB,EAAd;;AAEA,IAAMC,MAAM,GAAG;AACXC,EAAAA,QAAQ,EAAE,kBAACC,KAAD,EAAOC,GAAP,EAAc;AACpB,QAAIC,IAAI,GAAG,IAAIN,OAAO,CAACO,QAAZ,CAAqB,OAAKH,KAA1B,GAAiCC,GAAG,EAAC,YAAI;AAChD,UAAGA,GAAH,EAAO;AACHG,QAAAA,OAAO,CAACC,KAAR,EAAeJ,GAAG,CAACK,KAAJ,GAAW,KAAX,EAAkBL,GAAG,CAACM,IAAtB,EAA6B,4CAA0CP,KAAtF;AACH;;AACDI,MAAAA,OAAO,CAACI,GAAR,CAAY,0BAAZ;AACH,KALU,EAAX;AAMAN,IAAAA,IAAI,CAACO,KAAL,GAPoB,CAUxB;;AACA,QAAIC,EAAE,GAAG,IAAId,OAAO,CAACO,QAAZ,CAAqB,OAAKH,KAA1B,GAAiCC,GAAG,EAAC,YAAI;AAC7C;AACAS,MAAAA,EAAE,CAACC,SAAH,CAAa,YAAI;AACdD,QAAAA,EAAE,CAACE,GAAH,CAAO,0FAAP;AAIF,OALD;AAMAF,MAAAA,EAAE,CAACD,KAAH;AACJ,KATQ,EAAT;AAcH,GA1Bc,CA4Bf;AACA;AACA;;AA9Be,CAAf;AAkCAI,MAAM,CAACC,OAAP,GAAiBhB,MAAjB",
      "sourceRoot": "/media/sj/Data/code/transformations-game/Server/",
      "sourcesContent": [
        "const  Express = require('express');\nvar sqlite3 = require('sqlite3').verbose()\n\nconst dbfunc = {\n    createDB :(dbase,err)=> {\n        let dbCr = new sqlite3.Database(\"./\"+dbase,(err,()=>{\n            if(err){\n                console.error((err.errno +' : ', err.code , 'encountered. Could not create Database '+dbase));\n            }\n            console.log(\"Database game.db created\")\n        }))\n        dbCr.close()\n    \n\n    // check if DB is accessible and then create tables inside the serialize()\n    let db = new sqlite3.Database(\"./\"+dbase,(err,()=>{\n         // db.serialize(function () {})\n         db.serialize(()=>{\n            db.run(' CREATE TABLE IF NOT EXISTS users (userid TEXT, password TEXT ,email TEXT , reg_at TEXT)')\n\n            \n\n         })\n         db.close()\n    })\n    )\n\n   \n\n}\n\n// function test() {\n//     console.log(\"recognized as Function\")\n// }\n}\n\n\nmodule.exports = dbfunc"
      ]
    },
    "sourceType": "script",
    "mtime": 1588652362032
  }
}