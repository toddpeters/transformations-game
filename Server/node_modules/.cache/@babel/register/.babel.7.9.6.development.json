{
  "{\"sourceRoot\":\"/media/sj/Data/code/TransformationGame/Server/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/media/sj/Data/code/TransformationGame/Server\",\"filename\":\"/media/sj/Data/code/TransformationGame/Server/nodeserver.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/media/sj/Data/code/TransformationGame/Server\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/media/sj/Data/code/TransformationGame/Server/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/media/sj/Data/code/TransformationGame/Server",
      "filename": "/media/sj/Data/code/TransformationGame/Server/nodeserver.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/media/sj/Data/code/TransformationGame/Server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/media/sj/Data/code/TransformationGame/Server/nodeserver.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/media/sj/Data/code/TransformationGame/Server/nodeserver.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/media/sj/Data/code/TransformationGame/Server/",
        "sourceFileName": "nodeserver.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n// import Express from 'express';\nvar Express = require('express'); //  var App = require('../the_cabin_tapes/src/App.js')\n// import Path from'path'\n\n\nvar http = require('http');\n\nvar https = require('https');\n\nvar sqlite3 = require('sqlite3').verbose();\n\nvar db = new sqlite3.Database('game.db');\nvar nodeServer = Express();\nvar hostname = '127.0.0.1';\nvar port = 5000;\nnodeServer.get('/', function (req, res) {\n  console.log(req.route); //\n\n  db.serialize(function () {\n    db.run(' CREATE TABLE IF NOT EXISTS lorem (info TEXT, date_time TEXT)');\n    var stmt = db.prepare('INSERT INTO lorem VALUES (?,datetime(\"now\"))');\n\n    for (var i = 0; i < 10; i++) {\n      stmt.run('Ipsum ' + i);\n    }\n\n    stmt.finalize(); // db.run('INSERT INTO lorem  VALUES (datetime(\"now\"),datetime(\"now\", \"localtime\"))')\n\n    db.each('SELECT rowid AS id, info FROM lorem', function (err, row) {\n      console.log(row.id + ': ' + row.info);\n    });\n  }); //   db.close()\n  // \n\n  res.send(\"You are now seeing your BACKEND!!\");\n});\nnodeServer.get('/score', function (req, res) {\n  console.log(req.route);\n  res.send(\"Select state.score from DB\");\n});\nnodeServer.listen(port, hostname, function () {\n  console.log('Node Server Listening on port' + port);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVzZXJ2ZXIuanMiXSwibmFtZXMiOlsiRXhwcmVzcyIsInJlcXVpcmUiLCJodHRwIiwiaHR0cHMiLCJzcWxpdGUzIiwidmVyYm9zZSIsImRiIiwiRGF0YWJhc2UiLCJub2RlU2VydmVyIiwiaG9zdG5hbWUiLCJwb3J0IiwiZ2V0IiwicmVxIiwicmVzIiwiY29uc29sZSIsImxvZyIsInJvdXRlIiwic2VyaWFsaXplIiwicnVuIiwic3RtdCIsInByZXBhcmUiLCJpIiwiZmluYWxpemUiLCJlYWNoIiwiZXJyIiwicm93IiwiaWQiLCJpbmZvIiwic2VuZCIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBLElBQU9BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBeEIsQyxDQUVBO0FBQ0E7OztBQUNBLElBQUlDLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBbEI7O0FBQ0EsSUFBSUUsS0FBSyxHQUFHRixPQUFPLENBQUMsT0FBRCxDQUFuQjs7QUFFQSxJQUFJRyxPQUFPLEdBQUdILE9BQU8sQ0FBQyxTQUFELENBQVAsQ0FBbUJJLE9BQW5CLEVBQWQ7O0FBQ0EsSUFBSUMsRUFBRSxHQUFHLElBQUlGLE9BQU8sQ0FBQ0csUUFBWixDQUFxQixTQUFyQixDQUFUO0FBRUEsSUFBTUMsVUFBVSxHQUFHUixPQUFPLEVBQTFCO0FBQ0EsSUFBTVMsUUFBUSxHQUFHLFdBQWpCO0FBQ0EsSUFBTUMsSUFBSSxHQUFHLElBQWI7QUFFQUYsVUFBVSxDQUFDRyxHQUFYLENBQWUsR0FBZixFQUFvQixVQUFDQyxHQUFELEVBQUtDLEdBQUwsRUFBVztBQUMzQkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlILEdBQUcsQ0FBQ0ksS0FBaEIsRUFEMkIsQ0FFM0I7O0FBRUFWLEVBQUFBLEVBQUUsQ0FBQ1csU0FBSCxDQUFhLFlBQVk7QUFDckJYLElBQUFBLEVBQUUsQ0FBQ1ksR0FBSCxDQUFPLCtEQUFQO0FBQ0EsUUFBSUMsSUFBSSxHQUFHYixFQUFFLENBQUNjLE9BQUgsQ0FBVyw4Q0FBWCxDQUFYOztBQUVBLFNBQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBRyxFQUFwQixFQUF3QkEsQ0FBQyxFQUF6QixFQUE2QjtBQUMzQkYsTUFBQUEsSUFBSSxDQUFDRCxHQUFMLENBQVUsV0FBV0csQ0FBckI7QUFFRDs7QUFFREYsSUFBQUEsSUFBSSxDQUFDRyxRQUFMLEdBVHFCLENBVXJCOztBQUdBaEIsSUFBQUEsRUFBRSxDQUFDaUIsSUFBSCxDQUFRLHFDQUFSLEVBQStDLFVBQVVDLEdBQVYsRUFBZUMsR0FBZixFQUFvQjtBQUNqRVgsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlVLEdBQUcsQ0FBQ0MsRUFBSixHQUFTLElBQVQsR0FBZ0JELEdBQUcsQ0FBQ0UsSUFBaEM7QUFDRCxLQUZEO0FBR0QsR0FoQkgsRUFKMkIsQ0FzQjNCO0FBRUE7O0FBQ0FkLEVBQUFBLEdBQUcsQ0FBQ2UsSUFBSixDQUFTLG1DQUFUO0FBQ0gsQ0ExQkQ7QUEyQkFwQixVQUFVLENBQUNHLEdBQVgsQ0FBZSxRQUFmLEVBQXlCLFVBQUNDLEdBQUQsRUFBS0MsR0FBTCxFQUFXO0FBQ2hDQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUgsR0FBRyxDQUFDSSxLQUFoQjtBQUNBSCxFQUFBQSxHQUFHLENBQUNlLElBQUosQ0FBUyw0QkFBVDtBQUNILENBSEQ7QUFJQXBCLFVBQVUsQ0FBQ3FCLE1BQVgsQ0FBa0JuQixJQUFsQixFQUF1QkQsUUFBdkIsRUFDSSxZQUFJO0FBQUNLLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGtDQUFnQ0wsSUFBNUM7QUFBa0QsQ0FEM0QiLCJzb3VyY2VSb290IjoiL21lZGlhL3NqL0RhdGEvY29kZS9UcmFuc2Zvcm1hdGlvbkdhbWUvU2VydmVyLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCBFeHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuY29uc3QgIEV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5cbi8vICB2YXIgQXBwID0gcmVxdWlyZSgnLi4vdGhlX2NhYmluX3RhcGVzL3NyYy9BcHAuanMnKVxuLy8gaW1wb3J0IFBhdGggZnJvbSdwYXRoJ1xudmFyIGh0dHAgPSByZXF1aXJlKCdodHRwJyk7XG52YXIgaHR0cHMgPSByZXF1aXJlKCdodHRwcycpO1xuXG52YXIgc3FsaXRlMyA9IHJlcXVpcmUoJ3NxbGl0ZTMnKS52ZXJib3NlKClcbnZhciBkYiA9IG5ldyBzcWxpdGUzLkRhdGFiYXNlKCdnYW1lLmRiJylcblxuY29uc3Qgbm9kZVNlcnZlciA9IEV4cHJlc3MoKTtcbmNvbnN0IGhvc3RuYW1lID0gJzEyNy4wLjAuMSc7XG5jb25zdCBwb3J0ID0gNTAwMDtcblxubm9kZVNlcnZlci5nZXQoJy8nLCAocmVxLHJlcyk9PntcbiAgICBjb25zb2xlLmxvZyhyZXEucm91dGUpXG4gICAgLy9cbiAgICBcbiAgICBkYi5zZXJpYWxpemUoZnVuY3Rpb24gKCkge1xuICAgICAgICBkYi5ydW4oJyBDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBsb3JlbSAoaW5mbyBURVhULCBkYXRlX3RpbWUgVEVYVCknKVxuICAgICAgICB2YXIgc3RtdCA9IGRiLnByZXBhcmUoJ0lOU0VSVCBJTlRPIGxvcmVtIFZBTFVFUyAoPyxkYXRldGltZShcIm5vd1wiKSknKVxuICAgICAgXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuICAgICAgICAgIHN0bXQucnVuKCgnSXBzdW0gJyArIGkpKVxuICAgICAgICAgIFxuICAgICAgICB9XG4gICAgICBcbiAgICAgICAgc3RtdC5maW5hbGl6ZSgpXG4gICAgICAgIC8vIGRiLnJ1bignSU5TRVJUIElOVE8gbG9yZW0gIFZBTFVFUyAoZGF0ZXRpbWUoXCJub3dcIiksZGF0ZXRpbWUoXCJub3dcIiwgXCJsb2NhbHRpbWVcIikpJylcblxuICAgICAgXG4gICAgICAgIGRiLmVhY2goJ1NFTEVDVCByb3dpZCBBUyBpZCwgaW5mbyBGUk9NIGxvcmVtJywgZnVuY3Rpb24gKGVyciwgcm93KSB7XG4gICAgICAgICAgY29uc29sZS5sb2cocm93LmlkICsgJzogJyArIHJvdy5pbmZvKVxuICAgICAgICB9KVxuICAgICAgfSlcbiAgICAgIFxuICAgIC8vICAgZGIuY2xvc2UoKVxuICAgIFxuICAgIC8vIFxuICAgIHJlcy5zZW5kKFwiWW91IGFyZSBub3cgc2VlaW5nIHlvdXIgQkFDS0VORCEhXCIpXG59KVxubm9kZVNlcnZlci5nZXQoJy9zY29yZScsIChyZXEscmVzKT0+e1xuICAgIGNvbnNvbGUubG9nKHJlcS5yb3V0ZSlcbiAgICByZXMuc2VuZChcIlNlbGVjdCBzdGF0ZS5zY29yZSBmcm9tIERCXCIpXG59KVxubm9kZVNlcnZlci5saXN0ZW4ocG9ydCxob3N0bmFtZSwgXG4gICAgKCk9Pntjb25zb2xlLmxvZygnTm9kZSBTZXJ2ZXIgTGlzdGVuaW5nIG9uIHBvcnQnK3BvcnQpfSkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "nodeserver.js"
      ],
      "names": [
        "Express",
        "require",
        "http",
        "https",
        "sqlite3",
        "verbose",
        "db",
        "Database",
        "nodeServer",
        "hostname",
        "port",
        "get",
        "req",
        "res",
        "console",
        "log",
        "route",
        "serialize",
        "run",
        "stmt",
        "prepare",
        "i",
        "finalize",
        "each",
        "err",
        "row",
        "id",
        "info",
        "send",
        "listen"
      ],
      "mappings": ";;AAAA;AACA,IAAOA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAxB,C,CAEA;AACA;;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,OAAD,CAAnB;;AAEA,IAAIG,OAAO,GAAGH,OAAO,CAAC,SAAD,CAAP,CAAmBI,OAAnB,EAAd;;AACA,IAAIC,EAAE,GAAG,IAAIF,OAAO,CAACG,QAAZ,CAAqB,SAArB,CAAT;AAEA,IAAMC,UAAU,GAAGR,OAAO,EAA1B;AACA,IAAMS,QAAQ,GAAG,WAAjB;AACA,IAAMC,IAAI,GAAG,IAAb;AAEAF,UAAU,CAACG,GAAX,CAAe,GAAf,EAAoB,UAACC,GAAD,EAAKC,GAAL,EAAW;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,KAAhB,EAD2B,CAE3B;;AAEAV,EAAAA,EAAE,CAACW,SAAH,CAAa,YAAY;AACrBX,IAAAA,EAAE,CAACY,GAAH,CAAO,+DAAP;AACA,QAAIC,IAAI,GAAGb,EAAE,CAACc,OAAH,CAAW,8CAAX,CAAX;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BF,MAAAA,IAAI,CAACD,GAAL,CAAU,WAAWG,CAArB;AAED;;AAEDF,IAAAA,IAAI,CAACG,QAAL,GATqB,CAUrB;;AAGAhB,IAAAA,EAAE,CAACiB,IAAH,CAAQ,qCAAR,EAA+C,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACjEX,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAG,CAACC,EAAJ,GAAS,IAAT,GAAgBD,GAAG,CAACE,IAAhC;AACD,KAFD;AAGD,GAhBH,EAJ2B,CAsB3B;AAEA;;AACAd,EAAAA,GAAG,CAACe,IAAJ,CAAS,mCAAT;AACH,CA1BD;AA2BApB,UAAU,CAACG,GAAX,CAAe,QAAf,EAAyB,UAACC,GAAD,EAAKC,GAAL,EAAW;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,KAAhB;AACAH,EAAAA,GAAG,CAACe,IAAJ,CAAS,4BAAT;AACH,CAHD;AAIApB,UAAU,CAACqB,MAAX,CAAkBnB,IAAlB,EAAuBD,QAAvB,EACI,YAAI;AAACK,EAAAA,OAAO,CAACC,GAAR,CAAY,kCAAgCL,IAA5C;AAAkD,CAD3D",
      "sourceRoot": "/media/sj/Data/code/TransformationGame/Server/",
      "sourcesContent": [
        "// import Express from 'express';\nconst  Express = require('express');\n\n//  var App = require('../the_cabin_tapes/src/App.js')\n// import Path from'path'\nvar http = require('http');\nvar https = require('https');\n\nvar sqlite3 = require('sqlite3').verbose()\nvar db = new sqlite3.Database('game.db')\n\nconst nodeServer = Express();\nconst hostname = '127.0.0.1';\nconst port = 5000;\n\nnodeServer.get('/', (req,res)=>{\n    console.log(req.route)\n    //\n    \n    db.serialize(function () {\n        db.run(' CREATE TABLE IF NOT EXISTS lorem (info TEXT, date_time TEXT)')\n        var stmt = db.prepare('INSERT INTO lorem VALUES (?,datetime(\"now\"))')\n      \n        for (var i = 0; i < 10; i++) {\n          stmt.run(('Ipsum ' + i))\n          \n        }\n      \n        stmt.finalize()\n        // db.run('INSERT INTO lorem  VALUES (datetime(\"now\"),datetime(\"now\", \"localtime\"))')\n\n      \n        db.each('SELECT rowid AS id, info FROM lorem', function (err, row) {\n          console.log(row.id + ': ' + row.info)\n        })\n      })\n      \n    //   db.close()\n    \n    // \n    res.send(\"You are now seeing your BACKEND!!\")\n})\nnodeServer.get('/score', (req,res)=>{\n    console.log(req.route)\n    res.send(\"Select state.score from DB\")\n})\nnodeServer.listen(port,hostname, \n    ()=>{console.log('Node Server Listening on port'+port)})"
      ]
    },
    "sourceType": "script",
    "mtime": 1588198906608
  }
}